name: Infra (Terraform)

on:
  pull_request:
    paths: [ "infra/**/*.tf", "infra/**/*.tfvars" ]
  workflow_dispatch:

jobs:
  plan:
    name: Terraform Plan (no destroy gate)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # مهم لـ OIDC

    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      # لا تستخدمي ARM_CLIENT_SECRET مع OIDC

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra
        run: terraform init -upgrade

      - name: Terraform Plan
        id: plan
        working-directory: infra
        run: |
          terraform plan -out=plan.tfplan -no-color -detailed-exitcode || echo "exit_code=$?" >> $GITHUB_OUTPUT
          terraform show -no-color plan.tfplan > plan.txt

      - name: Fail if plan contains Destroy
        working-directory: infra
        run: |
          destroys=$(grep -Eo 'Destroy: [0-9]+' plan.txt | awk '{print $2}')
          if [ -n "$destroys" ] && [ "$destroys" -gt 0 ]; then
            echo "❌ Plan contains destroys ($destroys). Failing as requested."
            exit 1
          fi
          echo "✅ No destroys detected."

      - name: Upload plan result
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: infra/plan.txt
